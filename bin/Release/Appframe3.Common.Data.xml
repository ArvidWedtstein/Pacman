<?xml version="1.0"?>
<doc>
<assembly>
<name>
Appframe3.Common.Data
</name>
</assembly>
<members>
<member name="T:Appframe3.Common.Data.My.Resources.Resources">
<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
<member name="P:Appframe3.Common.Data.My.Resources.Resources.ResourceManager">
<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member>
<member name="P:Appframe3.Common.Data.My.Resources.Resources.Culture">
<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member>
<member name="P:Appframe3.Common.Data.afProcedureCall.ProcedureName">
 <summary>
 Gets or sets the name of the procedure.
 </summary>
 <value>The name of the procedure.</value>
</member>
<member name="P:Appframe3.Common.Data.afProcedureCall.Parameters">
 <summary>
 Gets or sets the parameters.
 </summary>
 <value>The parameters.</value>
</member>
<member name="P:Appframe3.Common.Data.afProcedureCall.Timeout">
 <summary>
 Gets or sets the wait time before terminating the attempt to execute a command and generating an error.
 </summary>
 <value></value>
 <returns>The time in seconds to wait for the command to execute. The default is 30 seconds.</returns>
 <remarks></remarks>
 Summary:
</member>
<member name="P:Appframe3.Common.Data.afRecordSource.ViewName">
 <summary>
 Gets or sets the name of the view.
 </summary>
 <value>The name of the view.</value>
</member>
<member name="P:Appframe3.Common.Data.afRecordSource.Hints">
 <summary>
 Specifies table or view hints to be used in operations.
 </summary>
</member>
<member name="P:Appframe3.Common.Data.afRecordSource.SelectColumns">
 <summary>
 Gets or sets the select columns.
 </summary>
 <value>The select columns.</value>
</member>
<member name="P:Appframe3.Common.Data.afRecordSource.OrderByColumns">
 <summary>
 Gets or sets the order by columns.
 </summary>
 <value>The order by columns.</value>
</member>
<member name="P:Appframe3.Common.Data.afRecordSource.GroupByColumns">
 <summary>
 Gets or sets the group by columns.
 </summary>
 <value>The group by columns.</value>
</member>
<member name="P:Appframe3.Common.Data.afRecordSource.WhereClause">
 <summary>
 Gets or sets the where claues.
 </summary>
 <value>The where clause.</value>
</member>
<member name="P:Appframe3.Common.Data.afRecordSource.FilterString">
 <summary>
 Gets or sets the filter string.
 </summary>
 <value>The filter string.</value>
</member>
<member name="P:Appframe3.Common.Data.afRecordSource.UseRowNumber">
 <summary>Gets or sets a value indicating whether to add row number.</summary>
 <value><c>true</c> to include [ROW_NUMBER] column, <c>false</c> to exclude it.</value>
 <remarks>If you need to get a range of records, use Skip and MaxRecords instead.</remarks>
</member>
<member name="P:Appframe3.Common.Data.afRecordSource.Skip">
 <summary>Gets or sets a value indicating how many rows to skip.</summary>
 <value><c>-1</c> to disable paging, <c>0 and up</c> to enable paging.</value>
 <remarks>Used together with MaxRecords to support paging.</remarks>
</member>
<member name="P:Appframe3.Common.Data.afRecordSource.OptionRecompile">
 <summary>Gets or sets whether or not to include OPTION(RECOMPILE). Avoid usage of this!</summary>
 <value><c>true</c> to include the option, <c>false</c> for normal execution</value>
 <remarks>Should only be used in extremely rare cases where optimization does not help</remarks>
</member>
<member name="P:Appframe3.Common.Data.afRecordSource.DistinctRows">
 <summary>
 Gets or sets a value indicating whether to select distinct rows.
 </summary>
 <value><c>true</c> if [distinct rows]; otherwise, <c>false</c>.</value>
</member>
<member name="P:Appframe3.Common.Data.afRecordSource.MaxRecords">
 <summary>
 Gets or sets the max no of records.
 </summary>
 <value>The max records.</value>
</member>
<member name="P:Appframe3.Common.Data.afRecordSource.IgnoreDesignTimeMaxRecords">
 <summary>
 Gets or sets a value indicating whether [ignore design time max records].
 </summary>
 <value>
 <c>true</c> if [ignore design time max records]; otherwise, <c>false</c>.
 </value>
</member>
<member name="P:Appframe3.Common.Data.afRecordSource.Criteria">
 <summary>
 Gets or sets the filter criteria.
 </summary>
 <value>The filter criteria.</value>
</member>
<member name="P:Appframe3.Common.Data.afRecordSource.MasterChildCriteria">
 <summary>
 Gets or sets the master child criteria.
 </summary>
 <value>The master child criteria.</value>
</member>
<member name="P:Appframe3.Common.Data.afRecordSource.UniqueTable">
 <summary>
 Gets or sets the unique table.
 </summary>
 <value>The unique table.</value>
</member>
<member name="P:Appframe3.Common.Data.afRecordSource.JsonField">
 <summary>
 Gets or sets the field alias.
 </summary>
 <value>The field alias.</value>
</member>
<member name="P:Appframe3.Common.Data.afRecordSource.AlternativeConnection">
 <summary>
 Gets or sets the AlternativeConnection.
 </summary>
 <value>Alternative ConnectionString name.</value>
</member>
<member name="P:Appframe3.Common.Data.afRecordSource.ToXML">
 <summary>
 Serializes the object to XML.
 </summary>
 <value>To XML.</value>
</member>
<member name="P:Appframe3.Common.Data.afRecordSource.DisableAutoLoad">
 <summary>
 Load the table definition if this is true
 </summary>
 <value>Boolean</value>
</member>
<member name="M:Appframe3.Common.Data.afRecordSource.FromXML(System.String)">
 <summary>
 Deserializes an object from XML
 </summary>
 <param name="pXML"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Appframe3.Common.Data.afReportRecordSourceCollection.Item(System.String)">
 <summary>
 Will return afReportRecordSource with specified ID
 </summary>
 <param name="pID"> ID of afReportRecordSource</param>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Appframe3.Common.Data.Columns.afColumn.Name">
 <summary>
 Gets or sets the name.
 </summary>
 <value>The name.</value>
</member>
<member name="P:Appframe3.Common.Data.Columns.afGroupByColumnCollection.Item(System.Int32)">
 <summary>
 Gets or sets the element at the specified index.
 </summary>
 <value></value>
 <returns>The element at the specified index.</returns>
 <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.IList" />.</exception>
</member>
<member name="P:Appframe3.Common.Data.Columns.afGroupByColumnCollection.Item(System.String)">
 <summary>
 Gets or sets the element at the specified index.
 </summary>
 <value></value>
 <returns>The element with the specified name.</returns>
</member>
<member name="M:Appframe3.Common.Data.Columns.afGroupByColumnCollection.Add(System.String)">
 <summary>
 Adds the specified groupBy column.
 </summary>
 <param name="Name">The name.</param>
 <returns></returns>
</member>
<member name="M:Appframe3.Common.Data.Columns.afGroupByColumnCollection.Add(Appframe3.Common.Data.Columns.afGroupByColumn)">
 <summary>
 Adds the specified groupBy column.
 </summary>
 <param name="afGroupByColumn">The af group by column.</param>
 <returns></returns>
</member>
<member name="M:Appframe3.Common.Data.Columns.afGroupByColumnCollection.AddRange(System.String[])">
 <summary>
 Adds a range range og GroupBy columns.
 </summary>
 <param name="Name">The name.</param>
</member>
<member name="M:Appframe3.Common.Data.Columns.afGroupByColumnCollection.Remove(Appframe3.Common.Data.Columns.afGroupByColumn)">
 <summary>
 Removes the specified group by column.
 </summary>
 <param name="afGroupByColumn">The group by column.</param>
</member>
<member name="M:Appframe3.Common.Data.Columns.afGroupByColumnCollection.Contains(System.String)">
 <summary>
 Determines whether [contains] [the specified name].
 </summary>
 <param name="Name">The name.</param>
 <returns>
 <c>true</c> if [contains] [the specified name]; otherwise, <c>false</c>.
 </returns>
</member>
<member name="P:Appframe3.Common.Data.Columns.afOrderByColumn.Direction">
 <summary>
 Gets or sets the direction.
 </summary>
 <value>The direction.</value>
</member>
<member name="P:Appframe3.Common.Data.Columns.afOrderByColumnCollection.Item(System.Int32)">
 <summary>
 Gets or sets the element at the specified index.
 </summary>
 <value></value>
 <returns>The element at the specified index.</returns>
 <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.IList" />.</exception>
</member>
<member name="P:Appframe3.Common.Data.Columns.afOrderByColumnCollection.Item(System.String)">
 <summary>
 Gets or sets the element at the specified index.
 </summary>
 <value></value>
 <returns>The element with the specified name.</returns>
</member>
<member name="M:Appframe3.Common.Data.Columns.afOrderByColumnCollection.Add(System.String)">
 <summary>
 Adds the specified OrderBy column.
 </summary>
 <param name="Name">The name.</param>
 <returns></returns>
</member>
<member name="M:Appframe3.Common.Data.Columns.afOrderByColumnCollection.Add(System.String,System.String)">
 <summary>
 Adds the specified OrderBy column.
 </summary>
 <param name="Name">The name.</param>
 <param name="FieldAlias">The alias.</param>
 <returns></returns>
</member>
<member name="M:Appframe3.Common.Data.Columns.afOrderByColumnCollection.Add(System.String,Appframe3.Common.Data.Utils.eDescAsc)">
 <summary>
 Adds the specified OrderBy column.
 </summary>
 <param name="Name">The name.</param>
 <param name="Direction">The direction.</param>
 <returns></returns>
</member>
<member name="M:Appframe3.Common.Data.Columns.afOrderByColumnCollection.Add(System.String,System.String,Appframe3.Common.Data.Utils.eDescAsc)">
 <summary>
 Adds the specified OrderBy column.
 </summary>
 <param name="Name">The name.</param>
 <param name="FieldAlias">The alias.</param>
 <param name="Direction">The direction.</param>
 <returns></returns>
</member>
<member name="M:Appframe3.Common.Data.Columns.afOrderByColumnCollection.Add(Appframe3.Common.Data.Columns.afOrderByColumn)">
 <summary>
 Adds the specified OrderBy column.
 </summary>
 <param name="afOrderByColumn">The af order by column.</param>
 <returns></returns>
</member>
<member name="M:Appframe3.Common.Data.Columns.afOrderByColumnCollection.AddRange(System.String[])">
 <summary>
 Adds a range of OrderBy columns.
 </summary>
 <param name="Name">The name.</param>
</member>
<member name="M:Appframe3.Common.Data.Columns.afOrderByColumnCollection.Remove(Appframe3.Common.Data.Columns.afOrderByColumn)">
 <summary>
 Removes the specified order by column.
 </summary>
 <param name="afOrderByColumn">The order by column.</param>
</member>
<member name="M:Appframe3.Common.Data.Columns.afOrderByColumnCollection.Contains(System.String)">
 <summary>
 Determines whether [contains] [the specified name].
 </summary>
 <param name="Name">The name.</param>
 <returns>
 <c>true</c> if [contains] [the specified name]; otherwise, <c>false</c>.
 </returns>
</member>
<member name="P:Appframe3.Common.Data.Columns.afSelectColumn.DisplayFormatString">
 <summary>
 Gets or sets the lookup settings
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Appframe3.Common.Data.Columns.afSelectColumn.FieldAlias">
 <summary>
 Gets or sets the field alias.
 </summary>
 <value>The field alias.</value>
</member>
<member name="P:Appframe3.Common.Data.Columns.afSelectColumn.JsonField">
 <summary>
 Gets or sets the field alias.
 </summary>
 <value>The field alias.</value>
</member>
<member name="P:Appframe3.Common.Data.Columns.afSelectColumn.DataType">
 <summary>
 Gets or sets the type of the data.
 </summary>
 <value>The type of the data.</value>
</member>
<member name="P:Appframe3.Common.Data.Columns.afSelectColumn.Size">
 <summary>
 Gets or sets the size.
 </summary>
 <value>The size.</value>
</member>
<member name="P:Appframe3.Common.Data.Columns.afSelectColumn.Nullable">
 <summary>
 Gets or sets a value indicating whether this <see cref="T:Appframe3.Common.Data.Columns.afSelectColumn" /> is nullable.
 </summary>
 <value><c>true</c> if nullable; otherwise, <c>false</c>.</value>
</member>
<member name="P:Appframe3.Common.Data.Columns.afSelectColumn.Aggregate">
 <summary>
 Gets or sets the aggregate.
 </summary>
 <value>The aggregate.</value>
</member>
<member name="M:Appframe3.Common.Data.Columns.afSelectColumn.#ctor(System.String)">
 <summary>
 Initializes a new instance of the <see cref="T:Appframe3.Common.Data.Columns.afSelectColumn" /> class.
 </summary>
 <param name="Name">The name.</param>
</member>
<member name="M:Appframe3.Common.Data.Columns.afSelectColumn.#ctor(System.String,System.String)">
 <summary>
 Initializes a new instance of the <see cref="T:Appframe3.Common.Data.Columns.afSelectColumn" /> class.
 </summary>
 <param name="Name">The name.</param>
 <param name="FieldAlias">The field alias.</param>
</member>
<member name="P:Appframe3.Common.Data.Columns.afSelectColumnCollection.ExcludePrimKey">
 <summary>
 Gets or sets a value indicating whether to exclude the primkey column.
 </summary>
 <value><c>true</c> if [exclude prim key]; otherwise, <c>false</c>.</value>
</member>
<member name="P:Appframe3.Common.Data.Columns.afSelectColumnCollection.Item(System.Int32)">
 <summary>
 Gets or sets the element at the specified index.
 </summary>
 <value></value>
 <returns>The element at the specified index.</returns>
 <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.IList" />.</exception>
</member>
<member name="P:Appframe3.Common.Data.Columns.afSelectColumnCollection.Item(System.String)">
 <summary>
 Gets or sets the element at the specified index.
 </summary>
 <value></value>
 <returns>The element at the specified index.</returns>
</member>
<member name="M:Appframe3.Common.Data.Columns.afSelectColumnCollection.Add(Appframe3.Common.Data.Columns.afSelectColumn)">
 <summary>
 Adds the specified select column.
 </summary>
 <param name="afSelectColumn">The af select column.</param>
 <returns></returns>
</member>
<member name="M:Appframe3.Common.Data.Columns.afSelectColumnCollection.Add(System.String)">
 <summary>
 Adds the specified select column.
 </summary>
 <param name="Name">The name.</param>
 <returns></returns>
</member>
<member name="M:Appframe3.Common.Data.Columns.afSelectColumnCollection.Add(System.String,System.String)">
 <summary>
 Adds the specified select column.
 </summary>
 <param name="Name">The name.</param>
 <param name="FieldAlias">The field alias.</param>
 <returns></returns>
</member>
<member name="M:Appframe3.Common.Data.Columns.afSelectColumnCollection.Add(System.String,System.String,Appframe3.Common.Data.Utils.Aggregates)">
 <summary>
 Adds the specified select column.
 </summary>
 <param name="pName">The name of the column.</param>
 <param name="pFieldAlias">The field alias of the column.</param>
 <param name="pAggregate">The aggregate of the column.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Appframe3.Common.Data.Columns.afSelectColumnCollection.Add(System.String,Appframe3.Common.Data.Utils.Aggregates)">
 <summary>
 Adds the specified select column.
 </summary>
 <param name="Name">The name.</param>
 <param name="Aggregate">The aggregate.</param>
 <returns></returns>
</member>
<member name="M:Appframe3.Common.Data.Columns.afSelectColumnCollection.Add(System.String,System.String,System.Data.DbType)">
 <summary>
 Adds the specified select column.
 </summary>
 <param name="Name">The name.</param>
 <param name="FieldAlias">The field alias.</param>
 <param name="DataType">Type of the data.</param>
 <returns></returns>
</member>
<member name="M:Appframe3.Common.Data.Columns.afSelectColumnCollection.Add(System.String,System.String,System.Data.DbType,System.Double)">
 <summary>
 Adds the specified select column.
 </summary>
 <param name="Name">The name.</param>
 <param name="FieldAlias">The field alias.</param>
 <param name="DataType">Type of the data.</param>
 <param name="Size">The size.</param>
 <returns></returns>
</member>
<member name="M:Appframe3.Common.Data.Columns.afSelectColumnCollection.Add(System.String,System.String,System.Data.DbType,System.Double,System.Boolean)">
 <summary>
 Adds the specified select column.
 </summary>
 <param name="Name">The name.</param>
 <param name="FieldAlias">The field alias.</param>
 <param name="DataType">Type of the data.</param>
 <param name="Size">The size.</param>
 <param name="Nullable">if set to <c>true</c> [nullable].</param>
 <returns></returns>
</member>
<member name="M:Appframe3.Common.Data.Columns.afSelectColumnCollection.AddRange(System.String[])">
 <summary>
 Adds a range of select columns.
 </summary>
 <param name="Name">The name.</param>
</member>
<member name="M:Appframe3.Common.Data.Columns.afSelectColumnCollection.Remove(Appframe3.Common.Data.Columns.afSelectColumn)">
 <summary>
 Removes the specified af select column.
 </summary>
 <param name="afSelectColumn">The af select column.</param>
</member>
<member name="M:Appframe3.Common.Data.Columns.afSelectColumnCollection.Contains(System.String,System.String)">
 <summary>
 Determines whether [contains] [the specified name].
 </summary>
 <param name="Name">The name.</param>
 <returns>
 <c>true</c> if [contains] [the specified name]; otherwise, <c>false</c>.
 </returns>
</member>
<member name="M:Appframe3.Common.Data.Columns.afSelectColumnCollection.Contains(System.String)">
 <summary>
 Determines whether [contains] [the specified name].
 </summary>
 <param name="Name">The name.</param>
 <returns>
 <c>true</c> if [contains] [the specified name]; otherwise, <c>false</c>.
 </returns>
</member>
<member name="M:Appframe3.Common.Data.DataExtensions.GetColumnValue``1(System.Data.DataRow,System.String,``0)">
 <summary>
 Returns specific type value for column specified by name
 </summary>
 <param name="columnName">Name of the column you need value from</param>
 <param name="fallBackValue">Value to retrieve when column value  is <see cref="T:System.DBNull"/></param>
 <returns></returns>
</member>
<member name="M:Appframe3.Common.Data.DataExtensions.GetColumnValue``1(System.Data.DataRow,System.Int32,``0)">
 <summary>
 Returns specific type value for column specified by index
 </summary>
 <param name="columnIndex">Index of the column you need value from</param>
 <param name="fallBackValue">Value to retrieve when column value  is <see cref="T:System.DBNull"/></param>
 <returns></returns>
</member>
<member name="M:Appframe3.Common.Data.DataExtensions.GetColumnValue``1(System.Data.DataRow,System.Data.DataColumn,``0)">
 <summary>
 Returns specific type value for column specified
 </summary>
 <param name="column">the column you need value from</param>
 <param name="fallBackValue">Value to retrieve when column value  is <see cref="T:System.DBNull"/></param>
 <returns></returns>
</member>
<member name="M:Appframe3.Common.Data.DataExtensions.GetDateColumnPositions(System.Data.DataTable)">
 <summary>
 Returns ordinal positions of columns that have <see cref="T:System.DateTime"/> type specified in <see cref="P:System.Data.DataColumn.DataType"/>
 </summary>
</member>
<member name="F:Appframe3.Common.Data.Hint.NONE">
 <summary>
 no table hint will be used
 </summary>
</member>
<member name="F:Appframe3.Common.Data.Hint.FORCESEEK">
 <summary>
 Specifies that the query optimizer use only an index seek operation as 
 the access path to the data in the table or view
 </summary>
</member>
<member name="F:Appframe3.Common.Data.Hint.FORCESCAN">
 <summary>
 Specifies that the query optimizer use only an index scan operation as 
 the access path to the referenced table or view
 </summary>
</member>
<member name="F:Appframe3.Common.Data.Hint.HOLDLOCK">
 <summary>
 Is equivalent to SERIALIZABLE
 </summary>
</member>
<member name="F:Appframe3.Common.Data.Hint.NOLOCK">
 <summary>
 Is equivalent to READUNCOMMITTED
 </summary>
</member>
<member name="F:Appframe3.Common.Data.Hint.NOWAIT">
 <summary>
 Instructs the Database Engine to return a message as soon as a lock is 
 encountered on the table (equivalent to specifying SET LOCK_TIMEOUT 0)
 </summary>
</member>
<member name="F:Appframe3.Common.Data.Hint.PAGLOCK">
 <summary>
 Takes page locks either where individual locks are ordinarily taken on 
 rows or keys, or where a single table lock is ordinarily taken
 </summary>
</member>
<member name="F:Appframe3.Common.Data.Hint.READCOMMITTED">
 <summary>
 Specifies that read operations comply with the rules for the 
 READ COMMITTED isolation level by using either locking or row versioning
 </summary>
</member>
<member name="F:Appframe3.Common.Data.Hint.READCOMMITTEDLOCK">
 <summary>
 Specifies that read operations comply with the rules for the 
 READ COMMITTED isolation level by using locking
 </summary>
</member>
<member name="F:Appframe3.Common.Data.Hint.READPAST">
 <summary>
 Specifies that the Database Engine not read rows that are locked by other 
 transactions
 </summary>
</member>
<member name="F:Appframe3.Common.Data.Hint.READUNCOMMITTED">
 <summary>
 Specifies that dirty reads are allowed
 </summary>
</member>
<member name="F:Appframe3.Common.Data.Hint.REPEATABLEREAD">
 <summary>
 Specifies that a scan is performed with the same locking semantics as a 
 transaction running at REPEATABLE READ isolation level
 </summary>
</member>
<member name="F:Appframe3.Common.Data.Hint.ROWLOCK">
 <summary>
 Specifies that row locks are taken when page or table locks are ordinarily 
 taken
 </summary>
</member>
<member name="F:Appframe3.Common.Data.Hint.SERIALIZABLE">
 <summary>
 Makes shared locks more restrictive by holding them until a transaction is 
 completed, instead of releasing the shared lock as soon as the required 
 table or data page is no longer needed, whether the transaction has been 
 completed or not
 </summary>
</member>
<member name="F:Appframe3.Common.Data.Hint.SNAPSHOT">
 <summary>
 The memory-optimized table is accessed under SNAPSHOT isolation
 </summary>
</member>
<member name="F:Appframe3.Common.Data.Hint.TABLOCK">
 <summary>
 Specifies that the acquired lock is applied at the table level
 </summary>
</member>
<member name="F:Appframe3.Common.Data.Hint.TABLOCKX">
 <summary>
 Specifies that an exclusive lock is taken on the table
 </summary>
</member>
<member name="F:Appframe3.Common.Data.Hint.UPDLOCK">
 <summary>
 Specifies that update locks are to be taken and held until the transaction
 completes
 </summary>
</member>
<member name="F:Appframe3.Common.Data.Hint.XLOCK">
 <summary>
 Specifies that exclusive locks are to be taken and held until the transaction 
 completes
 </summary>
</member>
<member name="M:Appframe3.Common.Data.CommonTSQL.ApplyCollation(Appframe3.Common.Data.afRecordSource,System.String,System.Func{Appframe3.Common.Data.Columns.afOrderByColumn,System.Boolean})">
 <summary>
 Will apply collation to recordsource order by columns and select columns when distinct is involved.
 Use GetIsCollatable to construct pPredicate that will determine what columns will be applied with collation.
 </summary>
 <param name="pRecordSource">afRecordSource instance to be updated. </param>
 <param name="pCollation">Collation to be used for columns</param>
 <param name="pPredicate">Funtion that identifies what columns should be applied with collation</param>
 <remarks></remarks>
</member>
<member name="M:Appframe3.Common.Data.CommonTSQL.SqlReadQueueAsync(System.String,Appframe3.Common.Data.IQueueProcessor,System.Object[],System.String,System.Threading.CancellationToken)">
 <summary>
 advanced version of SqlReadQueueAsync it uses preallocated values (object[]) it does not allocate 
 object array every time but instead reuses the supplied one, thus reducing allocation count. It also 
 returns false in case table does no longer contain any records, enabling early returns from sequencial reads.
 </summary>
 <param name="queueTableName"></param>
 <param name="processor"></param>
 <param name="values">preallocated array of objects to read data from queueTableName</param>
 <param name="connectionString"></param>
 <param name="ct"></param>
 <returns></returns>
</member>
<member name="M:Appframe3.Common.Data.CommonTSQL.SqlReadQueueAsync(System.String,Appframe3.Common.Data.IQueueProcessor,System.String,System.Threading.CancellationToken)">
 <summary>
 Simpler version of queue read. For every subsequent read it will allocate another array of object.
 It will always be correct, but it will keep garbage collector a bit more busy.
 </summary>
</member>
<member name="M:Appframe3.Common.Data.CommonTSQL.SqlUpdate(Appframe3.Common.Data.afRecordSource,System.Collections.Generic.Dictionary{System.String,System.Object},System.String)">
 <exception cref="T:System.ArgumentNullException"></exception>
 <exception cref="T:System.ArgumentException"></exception>
 <returns>number of rows affected</returns>
</member>
<member name="M:Appframe3.Common.Data.CommonTSQL.ToTbv(System.String)">
 <summary>
 Will turn atbl_% to atbv_% and stbl_% to stbv_%
 </summary>
</member>
<member name="P:Appframe3.Common.Data.Parameters.afParameter.Name">
 <summary>
 Gets or sets the name.
 </summary>
 <value>The name.</value>
</member>
<member name="P:Appframe3.Common.Data.Parameters.afParameter.Value">
 <summary>
 Gets or sets the value.
 </summary>
 <value>The value.</value>
</member>
<member name="P:Appframe3.Common.Data.Parameters.afParameter.SqlDbType">
 <summary>
 Gets or sets the type of the parameter.
 </summary>
 <value>The type of the parameter.</value>
</member>
<member name="P:Appframe3.Common.Data.Parameters.afParameter.Size">
 <summary>
 Gets or sets the size.
 </summary>
 <value>The size.</value>
</member>
<member name="M:Appframe3.Common.Data.Parameters.afParameterCollection.Add(System.String,System.Object)">
 <summary>
 Adds the specified parameter.
 </summary>
 <param name="Name">The name.</param>
 <param name="Value">The value.</param>
 <returns></returns>
</member>
<member name="M:Appframe3.Common.Data.Parameters.afParameterCollection.Add(System.String,System.Object,System.Data.SqlDbType)">
 <summary>
 Adds the specified parameter.
 </summary>
 <param name="Name">The name.</param>
 <param name="Value">The value.</param>
 <param name="SqlDbType">Type of the parameter.</param>
 <returns></returns>
</member>
<member name="M:Appframe3.Common.Data.Parameters.afParameterCollection.Add(System.String,System.Object,System.Data.SqlDbType,System.Int32)">
 <summary>
 Adds the specified parameter.
 </summary>
 <param name="Name">The name.</param>
 <param name="Value">The value.</param>
 <param name="SqlDbType">Type of the parameter.</param>
 <param name="Size">The size.</param>
 <returns></returns>
</member>
<member name="M:Appframe3.Common.Data.Parameters.afParameterCollection.Add(Appframe3.Common.Data.Parameters.afParameter)">
 <summary>
 Adds the specified parameter.
 </summary>
 <param name="afParameter">The parameter.</param>
 <returns></returns>
</member>
<member name="M:Appframe3.Common.Data.Parameters.afParameterCollection.Remove(Appframe3.Common.Data.Parameters.afParameter)">
 <summary>
 Removes the specified parameter.
 </summary>
 <param name="afParameter">The parameter.</param>
</member>
<member name="P:Appframe3.Common.Data.Parameters.afParameterCollection.Item(System.Int32)">
 <summary>
 Gets or sets the element at the specified index.
 </summary>
 <value></value>
 <returns>The element at the specified index.</returns>
 <exception cref="T:System.ArgumentOutOfRangeException">
 <paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.IList" />. </exception>
 <exception cref="T:System.NotSupportedException">The property is set and the <see cref="T:System.Collections.IList" /> is read-only. </exception>
</member>
<member name="M:Appframe3.Common.Data.Utils.SQLHelper.GetDbTypeFromSQLType(System.String)">
 <summary>
 Gets the db type from SQL type.
 </summary>
 <param name="pSQLType">Type of the p SQL.</param>
 <returns></returns>
</member>
<member name="M:Appframe3.Common.Data.Utils.SQLHelper.GetSqlDBTypeFromString(System.String)">
 <summary>
 Gets the SQL DB type from string.
 </summary>
 <param name="pSqlDbType">Type of the p SQL db.</param>
 <returns></returns>
</member>
<member name="M:Appframe3.Common.Data.Utils.SQLHelper.GetTypeFromDbType(System.Data.DbType@)">
 <summary>
 Translate from a DbType to a real .Net Type
 </summary>
 <returns></returns>
</member>
<member name="M:Appframe3.Common.Data.Utils.SQLHelper.IsGUID(System.String)">
 <summary>
 Determines whether the specified expression is GUID.
 </summary>
 <param name="expression">The expression.</param>
 <returns>
 <c>true</c> if the specified expression is GUID; otherwise, <c>false</c>.
 </returns>
</member>
<member name="T:Appframe3.Common.Data.CRC32Stream">
 <summary>
 Encapsulates a <see cref="T:System.IO.Stream" /> to calculate the CRC32 checksum on-the-fly as data passes through.
 </summary>
</member>
<member name="M:Appframe3.Common.Data.CRC32Stream.#ctor(System.IO.Stream)">
 <summary>
 Encapsulate a <see cref="T:System.IO.Stream" />.
 </summary>
 <param name="stream">The stream to calculate the checksum for.</param>
</member>
<member name="M:Appframe3.Common.Data.CRC32Stream.#ctor(System.IO.Stream,System.Boolean)">
 <summary>
 Encapsulate a <see cref="T:System.IO.Stream" />.
 </summary>
 <param name="stream">The stream to calculate the checksum for.</param>
 <param name="canSeek">Overrides the CanSeek property.
 CanSeek will still return false if the underlying stream is not seekable.</param>
</member>
<member name="M:Appframe3.Common.Data.CRC32Stream.ResetChecksum">
 <summary>Resets the read and write checksums.</summary>
</member>
<member name="M:Appframe3.Common.Data.CRC32Stream.ResetCounters">
 <summary>Resets the bytes read and written counters.</summary>
</member>
<member name="P:Appframe3.Common.Data.CRC32Stream.ReadCrc">
 <summary>
 Gets the CRC checksum of the data that was read by the stream thus far.
 </summary>
</member>
<member name="P:Appframe3.Common.Data.CRC32Stream.WriteCrc">
 <summary>
 Gets the CRC checksum of the data that was written to the stream thus far.
 </summary>
</member>
<member name="P:Appframe3.Common.Data.CRC32Stream.BytesRead">
 <summary>Gets the number of bytes currently read from the underlying stream</summary>
</member>
<member name="P:Appframe3.Common.Data.CRC32Stream.BytesWritten">
 <summary>Gets the number of bytes currently written to the underlying stream</summary>
</member>
<member name="P:Appframe3.Common.Data.CRC32Stream.Stream">
 <summary>
 Gets the underlying stream.
 </summary>
</member>
</members>
</doc>
